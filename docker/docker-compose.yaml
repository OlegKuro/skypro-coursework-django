version: '3.8'

services:
  frontend:
    image: sermalenk/skypro-front:base
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - api

  db:
    image: postgres:12.4-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "$DB_USER"
      POSTGRES_PASSWORD: "$DB_PASSWORD"
      POSTGRES_DB: "$DB_NAME"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
    - "5432:5432"
    networks:
      - db-network

  migrations:
    image: test:latest
    networks:
      - db-network
    depends_on:
      db:
        condition: service_healthy
    command: "./manage.py migrate"

  api:
    image: test:latest
    restart: unless-stopped
    networks:
      - app-network
      - db-network
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

networks:
  app-network:
  db-network:
